Index: src/main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <avr/io.h>\r\n#include <avr/interrupt.h>\r\n#include <Wire.h>\r\n#include \"LCD.cpp\"\r\n#include \"Nunchuk.cpp\"\r\n\r\n#include \"Player1.c\"\r\n#include \"Player2.c\"\r\n#include \"Background.c\"\r\n#include \"DiaRed.c\"\r\n\r\nvoid init_timer0();\r\n\r\nvoid setFreq(uint8_t);\r\n\r\nvoid clearSprite(uint16_t, uint8_t, uint16_t, uint8_t, uint16_t, uint8_t, const uint8_t *Sprite);\r\n\r\nvoid drawSprite(uint16_t, uint8_t, uint8_t, uint8_t, const uint8_t *);\r\n\r\nvoid drawBackground();\r\n\r\nuint16_t getColor(uint8_t);\r\n\r\nvoid update();\r\n\r\nvoid draw();\r\n\r\n#define NUNCHUK_ADDRESS 0x52\r\n\r\n#define IR_38KHZ 52\r\n#define IR_56KHZ 35\r\n\r\n#define SCREEN_WIDTH 320\r\n#define SCREEN_HEIGHT 240\r\n\r\n#define PLAYER_WIDTH 8      //player width is 16        half of player width because program runs faster when not needing to devide\r\n#define PLAYER_HEIGHT 20    //player height is 20\r\n\r\n#define SENDINGDATA_LEN 9\r\n#define SENDINGBIT_START_VALUE (- 2)\r\n\r\n#define STARTBIT_VALUE (-1)\r\n#define STARTBIT_MIN 3\r\n#define STARTBIT_MAX 6\r\n#define ZERO_MAX 2\r\n#define ONE_MIN 1\r\n#define ONE_MAX 4\r\n\r\n#define INITIAL_Y_VEL 10\r\n#define FRAME_TIME 32 //(1000/30FPS)-1 == 32\r\n\r\n#define BG_SPRITE_AMOUNT 192\r\n#define BG_SPRITE_WIDTH 10\r\n#define BG_SPRITE_HEIGHT 20\r\n\r\nstruct {\r\npublic:\r\n    uint16_t x = 0;\r\n    uint8_t y = SCREEN_HEIGHT - PLAYER_HEIGHT;\r\n    uint16_t xOld = 0;\r\n    uint8_t yOld = SCREEN_HEIGHT - PLAYER_HEIGHT;\r\n    int8_t yVelocity = 0;\r\n    bool jumping = false;\r\n} player1;\r\n\r\nstruct {\r\npublic:\r\n    uint16_t x = 0;\r\n    uint8_t y = SCREEN_HEIGHT - PLAYER_HEIGHT;\r\n    uint16_t xOld = 0;\r\n    uint8_t yOld = SCREEN_HEIGHT - PLAYER_HEIGHT;\r\n//    uint8_t animation\r\n} player2;\r\n\r\n// Check to see if the current bit is done sending\r\nbool dataIsSend = false;\r\n// Data to send over IR\r\nuint16_t sendingData = 0;\r\n// The data bit to send;\r\nint8_t sendingBit = SENDINGBIT_START_VALUE;\r\nuint16_t onTime = 0;\r\nvolatile unsigned long currentMs = 0;\r\nvolatile unsigned char intCurrentMs = 0;\r\n\r\nuint8_t msTime;\r\nuint16_t startTime;\r\nuint8_t zeroTime;\r\nuint8_t oneTime;\r\nuint8_t offTime;\r\n\r\nunsigned long startMs = 0;\r\nbool startBitReceived = false;\r\nuint16_t receivedData = 0;\r\nuint8_t bitCounter = 0;\r\nbool isDataBit = false;\r\n\r\nISR(PCINT2_vect) {\r\n    isDataBit = ((PIND >> PIND2) & 1) != 0; // Check for the pin state (high or low)\r\n\r\n    if (isDataBit) {\r\n        uint8_t difference = currentMs - startMs; // Calculate the length to determin the value\r\n\r\n        if (difference > STARTBIT_MIN && difference < STARTBIT_MAX) // Check if it's a start bit\r\n        {\r\n            startBitReceived = true;\r\n            bitCounter = 0;\r\n        }\r\n\r\n        if (startBitReceived) // If the start bit has been sent, check what the data is\r\n        {\r\n            if (difference < ZERO_MAX) // Check if it's a zero\r\n                receivedData &= ~(1 << bitCounter++);\r\n            else if (difference > ONE_MIN && difference < ONE_MAX) // Check if it's a one\r\n                receivedData |= (1 << bitCounter++);\r\n\r\n            if (bitCounter == SENDINGDATA_LEN) // If all bits are send, save the value in the variable\r\n            {\r\n                startBitReceived = false;\r\n                player2.x = receivedData;\r\n            }\r\n        }\r\n    }\r\n\r\n    startMs = currentMs; // Save the time from startup to now\r\n}\r\n\r\nISR(TIMER0_COMPA_vect) // Toggle IR light\r\n{\r\n    static uint16_t counter = 0;\r\n    static uint8_t msCounter = 0;\r\n\r\n    if (++msCounter > msTime) {\r\n        currentMs++;\r\n        intCurrentMs++;\r\n        msCounter = 0;\r\n    }\r\n\r\n    if (++counter > onTime) {\r\n        if (dataIsSend) // If the bit is done sending, wait before sending the next bit\r\n        {\r\n            onTime = offTime;        // Time after which to continue to the next bit\r\n            TCCR0A |= (1 << COM0A1); // Disable TC0\r\n        } else // If the waiting time is passed, send the next bit\r\n        {\r\n            if (sendingBit++ < SENDINGDATA_LEN) {\r\n                if (sendingBit == STARTBIT_VALUE) // Send start bit\r\n                    onTime = startTime;\r\n                else                                                                 // Send data\r\n                    onTime = ((sendingData >> sendingBit) & 1) ? oneTime\r\n                                                               : zeroTime; // Set the time corresponding to the bit\r\n\r\n                TCCR0A &= ~(1 << COM0A1); // Enabe TC0\r\n            } else {\r\n                sendingBit = SENDINGBIT_START_VALUE; // Once all bits are send, reset for next run\r\n                sendingData = player1.x;\r\n            }\r\n        }\r\n\r\n        dataIsSend = !dataIsSend; // Flip between sending a bit and waiting\r\n        counter = 0;\r\n    }\r\n}\r\n\r\nint main(void) {\r\n    // Setup IR sending\r\n    DDRD |= (1 << DDD6);\r\n    init_timer0();\r\n\r\n    // Setup IR recieving\r\n    PORTD |= (1 << PORTD2); //pull up\r\n    PCICR |= (1 << PCIE2);\r\n    PCMSK2 |= (1 << PCINT18);\r\n\r\n    setFreq(IR_38KHZ);\r\n\r\n    // Setup screen\r\n    Wire.begin();\r\n    setupSPI();\r\n    sei();\r\n    START_UP();\r\n\r\n\r\n\r\n    // Check nunckuk connection\r\n    while (!startNunchuk(NUNCHUK_ADDRESS)) {\r\n        fillRect(0, 0, 320, 240, PLAYER_RED);\r\n    }\r\n\r\n    drawBackground();\r\n    drawSprite(100, 100, 3, 9, DiaRed);\r\n    volatile int frameCounter = 0; //#TODO reset deze ergens en hem verplaatsen\r\n\r\n    while (true) {\r\n        if (intCurrentMs > FRAME_TIME) { //30 FPS\r\n            intCurrentMs = 0;\r\n            update();\r\n            draw();\r\n            frameCounter++;\r\n        }\r\n    }\r\n    return (0);\r\n}\r\n\r\nvoid init_timer0() {\r\n    /*\r\n    Fast-PWM mode (TOP = OCRA) -> WGM0[2:0] = 0b111\r\n    Set on compare match and clear on bottom (effectively pulling OC0A low) -> COM0A[1:0] = 0b11\r\n    Prescale /8 -> CS0[2:0] = 0b010\r\n    */\r\n    TCCR0A |= (1 << COM0A0) | (1 << COM0A1) | (1 << WGM01) | (1 << WGM00);\r\n    TCCR0B |= (1 << WGM02) | (1 << CS01);\r\n\r\n    // Enable interupts on compare match\r\n    TIMSK0 |= (1 << OCIE0A);\r\n}\r\n\r\nvoid setFreq(uint8_t freq) {\r\n    OCR0A = freq;\r\n\r\n    if (freq == IR_38KHZ) {\r\n        msTime = 37;\r\n        startTime = 189;\r\n        zeroTime = 37;\r\n        oneTime = 113;\r\n        offTime = 37;\r\n    } else {\r\n        msTime = 55;\r\n        startTime = 279;\r\n        zeroTime = 55;\r\n        oneTime = 167;\r\n        offTime = 55;\r\n    }\r\n}\r\n\r\n\r\nvoid update() {\r\n    player1.xOld = player1.x;\r\n    player1.yOld = player1.y;\r\n\r\n    // Get the nunchuck input data\r\n    if (!getState(NUNCHUK_ADDRESS))\r\n        return;\r\n\r\n    // Check for movement to right (only move when not against the wall)\r\n    if (state.joy_x_axis > 140 && player1.x + PLAYER_WIDTH * 2 < SCREEN_WIDTH)\r\n        player1.x += 2;\r\n\r\n        // Check for movement to left (only move when not against the wall)\r\n    else if (state.joy_x_axis < 100 && player1.x > 0)\r\n        player1.x -= 2;\r\n\r\n    // If jumping, lower the velocity until it hits the max (negative) velocity\r\n    if (player1.jumping) {\r\n        player1.y -= player1.yVelocity;\r\n\r\n        if (player1.yVelocity > -INITIAL_Y_VEL)\r\n            player1.yVelocity--;\r\n    }\r\n\r\n    // If the player is back on the ground, stop jumping\r\n    if (player1.y == SCREEN_HEIGHT - PLAYER_HEIGHT) {\r\n        player1.jumping = false;\r\n        player1.yVelocity = 0;\r\n    }\r\n\r\n    // Set the player to jump when the nunchuck movement is high enough and not jumping already\r\n    if (state.accel_z_axis < 0xFF && !player1.jumping) {\r\n        player1.jumping = true;\r\n        player1.yVelocity = INITIAL_Y_VEL;\r\n    }\r\n}\r\n\r\nvoid draw() {\r\n    clearSprite(player1.x, player1.y, player1.xOld, player1.yOld, PLAYER_WIDTH, PLAYER_HEIGHT, Player1);\r\n    drawSprite(player1.x, player1.y, PLAYER_WIDTH, PLAYER_HEIGHT, Player1);\r\n\r\n    clearSprite(player2.x, player2.y, player2.xOld, player2.yOld, PLAYER_WIDTH, PLAYER_HEIGHT, Player2);\r\n    drawSprite(player2.x, player2.y, PLAYER_WIDTH, PLAYER_HEIGHT, Player2);\r\n}\r\n\r\nvoid clearSprite(uint16_t x, uint8_t y, uint16_t xOud, uint8_t yOud, uint16_t w, uint8_t h, const uint8_t *Sprite) {\r\n    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++) {\r\n        if (PixGroup % w == 0 && PixGroup != 0) {\r\n            xOud -= w * 2;\r\n            yOud++;\r\n        }\r\n        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++) {\r\n            uint16_t color = getColor(((Sprite[PixGroup] & ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));\r\n\r\n            if (color != 255 && !(xOud >= x && xOud <= x + w * 2 - 1 && yOud >= y && yOud <= y + h - 1)) {\r\n                drawPixel(xOud, yOud, getColor(\r\n                        (Background[xOud % (BG_SPRITE_WIDTH * 2) / 2 + yOud % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] &\r\n                         ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));\r\n            }\r\n\r\n            xOud++;\r\n        }\r\n    }\r\n}\r\n\r\nvoid drawSprite(uint16_t x, uint8_t y, const uint8_t w, const uint8_t h, const uint8_t *Sprite) {\r\n    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++) {\r\n        if (PixGroup % w == 0 && PixGroup != 0) {\r\n            x -= w * 2;\r\n            y++;\r\n        }\r\n        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++) {\r\n            uint16_t color = getColor(((Sprite[PixGroup] & ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));\r\n            drawPixel(x, y, (color == 255) ? getColor(\r\n                    (Background[x % (BG_SPRITE_WIDTH * 2) / 2 + y % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] &\r\n                     ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)) : color);\r\n\r\n            x++;\r\n        }\r\n    }\r\n}\r\n\r\nvoid drawBackground() {\r\n    uint16_t x = 0;\r\n    uint8_t y = 0;\r\n    for (uint8_t i = 0; i < BG_SPRITE_AMOUNT; i++) {\r\n        drawSprite(x, y, BG_SPRITE_WIDTH, BG_SPRITE_HEIGHT, Background);\r\n        if (x >= SCREEN_WIDTH - BG_SPRITE_WIDTH * 2) {\r\n            x = 0;\r\n            y += BG_SPRITE_HEIGHT;\r\n        } else\r\n            x += BG_SPRITE_WIDTH * 2;\r\n    }\r\n}\r\n\r\nuint16_t getColor(uint8_t Color) {\r\n    switch (Color) {\r\n        case 0:             //0000\r\n            return BLACK;\r\n\r\n        case 1:             //0001\r\n            return PLAYER_RED;\r\n\r\n        case 2:             //0010\r\n            return PLAYER_ORANGE;\r\n\r\n        case 3:             //0011\r\n            return PLAYER_YELLOW;\r\n\r\n        case 4:             //0100\r\n            return PLAYER_DARK_BLUE;\r\n\r\n        case 5:             //0101\r\n            return PLAYER_BLUE;\r\n\r\n        case 6:             //0110\r\n            return PLAYER_LIGHT_BLUE;\r\n\r\n        case 7:             //0111\r\n            return SWAMP_GREEN;\r\n\r\n        case 8:             //1000\r\n            return INTER_BROWN;\r\n\r\n        case 9:             //1001\r\n            return INTER_GOLD;\r\n\r\n        case 10:            //1010\r\n            return INTER_PURPLE;\r\n\r\n        case 11:            //1011\r\n            return INTER_YELLOW;\r\n\r\n        case 12:            //1100\r\n            //if background\r\n            return BACKGROUND_LIGHT;\r\n            //else return FOREGROUND_DARK;\r\n\r\n        case 13:            //1101\r\n            //if background\r\n            return BACKGROUND_DARK;\r\n            //else return FOREGROUND_LIGHT;\r\n\r\n        case 14:            //1110\r\n            return 0xFFFF;  //white\r\n\r\n        case 15:            //1111\r\n            return 255;\r\n        default:\r\n            return 255;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main.cpp b/src/main.cpp
--- a/src/main.cpp	(revision b7c508bb5178dd4d0b44194156680dfcb022f980)
+++ b/src/main.cpp	(date 1670859614246)
@@ -2,29 +2,27 @@
 #include <avr/interrupt.h>
 #include <Wire.h>
 #include "LCD.cpp"
-#include "Nunchuk.cpp"
-
 #include "Player1.c"
 #include "Player2.c"
 #include "Background.c"
-#include "DiaRed.c"
+#include "Nunchuk.cpp"
 
 void init_timer0();
-
 void setFreq(uint8_t);
 
-void clearSprite(uint16_t, uint8_t, uint16_t, uint8_t, uint16_t, uint8_t, const uint8_t *Sprite);
-
-void drawSprite(uint16_t, uint8_t, uint8_t, uint8_t, const uint8_t *);
-
+void drawBackgroundTile(uint16_t, uint8_t, uint8_t, uint8_t);
+void clearSprite(uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t *);
+bool pointInRect(uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t);
+void drawSprite(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t *);
 void drawBackground();
-
 uint16_t getColor(uint8_t);
 
 void update();
-
 void draw();
 
+#define TFT_CS 10
+#define TFT_DC 9
+
 #define NUNCHUK_ADDRESS 0x52
 
 #define IR_38KHZ 52
@@ -33,45 +31,75 @@
 #define SCREEN_WIDTH 320
 #define SCREEN_HEIGHT 240
 
-#define PLAYER_WIDTH 8      //player width is 16        half of player width because program runs faster when not needing to devide
-#define PLAYER_HEIGHT 20    //player height is 20
+#define PLAYER_WIDTH 8
+#define PLAYER_ACTUAL_WIDTH 16
+#define PLAYER_HEIGHT 20
 
 #define SENDINGDATA_LEN 9
-#define SENDINGBIT_START_VALUE (- 2)
+#define SENDINGBIT_START_VALUE - 2
 
-#define STARTBIT_VALUE (-1)
+#define STARTBIT_VALUE -1
 #define STARTBIT_MIN 3
 #define STARTBIT_MAX 6
 #define ZERO_MAX 2
 #define ONE_MIN 1
 #define ONE_MAX 4
 
-#define INITIAL_Y_VEL 10
-#define FRAME_TIME 32 //(1000/30FPS)-1 == 32
+#define INITIAL_Y_VEL 8
+#define FRAME_TIME 32 //(1000/30FPS)-1 = 32
 
 #define BG_SPRITE_AMOUNT 192
 #define BG_SPRITE_WIDTH 10
-#define BG_SPRITE_HEIGHT 20
+#define BG_SPRITE_ACTUAL_WIDTH 20
+#define BG_SPRITE_HEIGHT 10
+
+#define NUM_OF_WALLS 16
 
 struct {
 public:
-    uint16_t x = 0;
-    uint8_t y = SCREEN_HEIGHT - PLAYER_HEIGHT;
-    uint16_t xOld = 0;
-    uint8_t yOld = SCREEN_HEIGHT - PLAYER_HEIGHT;
+    uint16_t x = 13;
+    uint8_t y = 170;
+    uint16_t xOld = x;
+    uint8_t yOld = y;
     int8_t yVelocity = 0;
     bool jumping = false;
 } player1;
 
 struct {
 public:
-    uint16_t x = 0;
-    uint8_t y = SCREEN_HEIGHT - PLAYER_HEIGHT;
-    uint16_t xOld = 0;
-    uint8_t yOld = SCREEN_HEIGHT - PLAYER_HEIGHT;
+    uint16_t x = 13;
+    uint8_t y = 210;
+    uint16_t xOld = x;
+    uint8_t yOld = y;
 //    uint8_t animation
 } player2;
 
+struct Rect{
+    uint16_t x;
+    uint8_t y;
+    uint8_t w;
+    uint8_t h;
+};
+
+Rect walls[] = {
+        Rect{0, 0, 5, 240},
+        Rect{10, 0, 155, 10},
+        Rect{310, 10, 5, 230},
+        Rect{10, 230, 155, 10},
+        Rect{10, 40, 20, 40},
+        Rect{50, 70, 115, 10},
+        Rect{153, 50, 30, 20},
+        Rect{40, 110, 75, 10},
+        Rect{180, 120, 50, 10},
+        Rect{280, 120, 15, 20},
+        Rect{290, 140, 10, 10},
+        Rect{10, 150, 70, 10},
+        Rect{150, 150, 5, 30},
+        Rect{150, 180, 52, 10},
+        Rect{280, 210, 15, 20},
+        Rect{10, 190, 40, 10}
+};
+
 // Check to see if the current bit is done sending
 bool dataIsSend = false;
 // Data to send over IR
@@ -79,8 +107,8 @@
 // The data bit to send;
 int8_t sendingBit = SENDINGBIT_START_VALUE;
 uint16_t onTime = 0;
-volatile unsigned long currentMs = 0;
-volatile unsigned char intCurrentMs = 0;
+volatile uint32_t currentMs = 0;
+volatile uint8_t intCurrentMs = 0;
 
 uint8_t msTime;
 uint16_t startTime;
@@ -88,7 +116,7 @@
 uint8_t oneTime;
 uint8_t offTime;
 
-unsigned long startMs = 0;
+uint32_t startMs = 0;
 bool startBitReceived = false;
 uint16_t receivedData = 0;
 uint8_t bitCounter = 0;
@@ -100,17 +128,17 @@
     if (isDataBit) {
         uint8_t difference = currentMs - startMs; // Calculate the length to determin the value
 
-        if (difference > STARTBIT_MIN && difference < STARTBIT_MAX) // Check if it's a start bit
+        if (difference > STARTBIT_MIN && difference < STARTBIT_MAX) // Check if its a start bit
         {
             startBitReceived = true;
             bitCounter = 0;
         }
 
-        if (startBitReceived) // If the start bit has been sent, check what the data is
+        if (startBitReceived) // If the start bit has been send, check what the data is
         {
-            if (difference < ZERO_MAX) // Check if it's a zero
+            if (difference < ZERO_MAX) // Check if its a zero
                 receivedData &= ~(1 << bitCounter++);
-            else if (difference > ONE_MIN && difference < ONE_MAX) // Check if it's a one
+            else if (difference > ONE_MIN && difference < ONE_MAX) // Check if its a one
                 receivedData |= (1 << bitCounter++);
 
             if (bitCounter == SENDINGDATA_LEN) // If all bits are send, save the value in the variable
@@ -176,7 +204,10 @@
     // Setup screen
     Wire.begin();
     setupSPI();
+
     sei();
+
+    // Start the screen and send startup commands
     START_UP();
 
 
@@ -187,10 +218,9 @@
     }
 
     drawBackground();
-    drawSprite(100, 100, 3, 9, DiaRed);
     volatile int frameCounter = 0; //#TODO reset deze ergens en hem verplaatsen
 
-    while (true) {
+    while (1) {
         if (intCurrentMs > FRAME_TIME) { //30 FPS
             intCurrentMs = 0;
             update();
@@ -242,7 +272,7 @@
         return;
 
     // Check for movement to right (only move when not against the wall)
-    if (state.joy_x_axis > 140 && player1.x + PLAYER_WIDTH * 2 < SCREEN_WIDTH)
+    if (state.joy_x_axis > 140 && player1.x + PLAYER_ACTUAL_WIDTH < SCREEN_WIDTH)
         player1.x += 2;
 
         // Check for movement to left (only move when not against the wall)
@@ -278,37 +308,53 @@
     drawSprite(player2.x, player2.y, PLAYER_WIDTH, PLAYER_HEIGHT, Player2);
 }
 
-void clearSprite(uint16_t x, uint8_t y, uint16_t xOud, uint8_t yOud, uint16_t w, uint8_t h, const uint8_t *Sprite) {
-    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++) {
-        if (PixGroup % w == 0 && PixGroup != 0) {
-            xOud -= w * 2;
-            yOud++;
+void clearSprite(uint16_t x, uint8_t y, uint16_t xOld, uint8_t yOld, uint8_t w, uint8_t h, uint8_t *Sprite)
+{
+    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++)
+    {
+        if (PixGroup % w == 0 && PixGroup != 0)
+        {
+            xOld -= w * 2;
+            yOld++;
         }
-        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++) {
+        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++)
+        {
             uint16_t color = getColor(((Sprite[PixGroup] & ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));
 
-            if (color != 255 && !(xOud >= x && xOud <= x + w * 2 - 1 && yOud >= y && yOud <= y + h - 1)) {
-                drawPixel(xOud, yOud, getColor(
-                        (Background[xOud % (BG_SPRITE_WIDTH * 2) / 2 + yOud % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] &
-                         ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));
-            }
+            if (color != 255 && !pointInRect(xOld, yOld, x, y, w, h))
+                drawPixel(xOld, yOld, getColor((Background[xOld % BG_SPRITE_ACTUAL_WIDTH / 2 + yOld % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] & ((xOld % BG_SPRITE_ACTUAL_WIDTH / 2) ? 0x0F : 0xF0)) >> ((xOld % BG_SPRITE_ACTUAL_WIDTH / 2) ? 0 : 4)));
 
-            xOud++;
+            xOld++;
         }
     }
 }
 
-void drawSprite(uint16_t x, uint8_t y, const uint8_t w, const uint8_t h, const uint8_t *Sprite) {
-    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++) {
-        if (PixGroup % w == 0 && PixGroup != 0) {
+bool pointInRect(uint16_t pointX, uint8_t pointY, uint16_t x, uint8_t y, uint8_t w, uint8_t h)
+{
+    return pointX >= x && pointX <= x + w * 2 - 1 && pointY >= y && pointY <= y + h - 1;
+}
+
+void drawSprite(uint16_t x, uint8_t y, uint8_t w, uint8_t h, uint8_t *Sprite) {
+    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++)
+    {
+        if (PixGroup % w == 0 && PixGroup != 0)
+        {
             x -= w * 2;
             y++;
         }
-        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++) {
+        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++)
+        {
             uint16_t color = getColor(((Sprite[PixGroup] & ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));
-            drawPixel(x, y, (color == 255) ? getColor(
-                    (Background[x % (BG_SPRITE_WIDTH * 2) / 2 + y % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] &
-                     ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)) : color);
+
+            if (color == 255)
+            {
+                if (y % BG_SPRITE_HEIGHT == 0)
+                    color = getColor((Background[x % BG_SPRITE_ACTUAL_WIDTH / 2 + y % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] & ((x % BG_SPRITE_ACTUAL_WIDTH / 2) ? 0x0F : 0xF0)) >> ((x % BG_SPRITE_ACTUAL_WIDTH / 2) ? 0 : 4));
+                else
+                    color = getColor((Background[x % BG_SPRITE_ACTUAL_WIDTH / 2 + y % BG_SPRITE_HEIGHT * BG_SPRITE_WIDTH] & ((x % BG_SPRITE_ACTUAL_WIDTH / 2) ? 0x0F : 0xF0)) >> ((x % BG_SPRITE_ACTUAL_WIDTH / 2) ? 0 : 4));
+            }
+
+            drawPixel(x, y, color);
 
             x++;
         }
@@ -316,15 +362,42 @@
 }
 
 void drawBackground() {
-    uint16_t x = 0;
-    uint8_t y = 0;
-    for (uint8_t i = 0; i < BG_SPRITE_AMOUNT; i++) {
-        drawSprite(x, y, BG_SPRITE_WIDTH, BG_SPRITE_HEIGHT, Background);
-        if (x >= SCREEN_WIDTH - BG_SPRITE_WIDTH * 2) {
-            x = 0;
-            y += BG_SPRITE_HEIGHT;
-        } else
-            x += BG_SPRITE_WIDTH * 2;
+    for (uint8_t y = 0; y < 24; y++)
+    {
+        if (y % 2 == 0)
+            for (uint8_t x = 0; x < 16; x++)
+                drawBackgroundTile(x * BG_SPRITE_ACTUAL_WIDTH, y * BG_SPRITE_HEIGHT, BG_SPRITE_WIDTH, BG_SPRITE_HEIGHT);
+        else
+            for (uint8_t x = 0; x < 17; x++)
+                drawBackgroundTile(x * BG_SPRITE_ACTUAL_WIDTH - BG_SPRITE_WIDTH, y * BG_SPRITE_HEIGHT, BG_SPRITE_WIDTH, BG_SPRITE_HEIGHT);
+    }
+}
+void drawBackgroundTile(uint16_t x, uint8_t y, uint8_t w, uint8_t h) {
+    for (uint16_t PixGroup = 0; PixGroup < w * h; PixGroup++)
+    {
+        if (PixGroup % w == 0 && PixGroup != 0)
+        {
+            x -= w * 2;
+            y++;
+        }
+        for (uint8_t Pixel = 0; Pixel <= 1; Pixel++)
+        {
+            uint16_t color = getColor(((Background[PixGroup] & ((Pixel) ? 0x0F : 0xF0)) >> ((Pixel) ? 0 : 4)));
+
+            for (uint8_t i = 0; i < NUM_OF_WALLS; i++)
+            {
+                Rect &r = walls[i];
+                if (pointInRect(x, y, r.x, r.y, r.w, r.h))
+                {
+                    color = (color == BACKGROUND_DARK) ? FOREGROUND_DARK : FOREGROUND_LIGHT;
+                    break;
+                }
+            }
+
+            drawPixel(x, y, color);
+
+            x++;
+        }
     }
 }
 
@@ -369,12 +442,12 @@
         case 12:            //1100
             //if background
             return BACKGROUND_LIGHT;
-            //else return FOREGROUND_DARK;
+            //else return FOREGROUND_LIGHT;
 
         case 13:            //1101
             //if background
             return BACKGROUND_DARK;
-            //else return FOREGROUND_LIGHT;
+            //else return FOREGROUND_DARK;
 
         case 14:            //1110
             return 0xFFFF;  //white
@@ -383,5 +456,6 @@
             return 255;
         default:
             return 255;
-    }
+    };
+    return 0;
 }
\ No newline at end of file
Index: include/Background.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>uint8_t Background[200]={\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,\r\n        0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101,\r\n        0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,\r\n        0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101,\r\n        0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101\r\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/Background.c b/include/Background.c
--- a/include/Background.c	(revision b7c508bb5178dd4d0b44194156680dfcb022f980)
+++ b/include/Background.c	(date 1670859653687)
@@ -1,4 +1,4 @@
-uint8_t Background[200]={
+uint8_t Background[100]={
         0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,
         0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,
         0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,
@@ -7,16 +7,6 @@
         0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,
         0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,
         0b11001100, 0b11001101, 0b11011100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100,
-        0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101,
-        0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
-        0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001101, 0b11011100, 0b11001100,
         0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101,
         0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101, 0b11011101
 };
\ No newline at end of file
Index: include/Button.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>uint8_t Button[25]={\r\n0b11111111, 0b11110000, 0b00000000, 0b00000000,\r\n0b11111111, 0b00001000, 0b10101010, 0b10101010,\r\n0b11110000, 0b10011001, 0b10011010, 0b10101010,\r\n0b00001000, 0b10011001, 0b10011001, 0b10011001,\r\n0b00001000, 0b10001000, 0b10001000, 0b10001000\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/Button.c b/include/Button.c
--- a/include/Button.c	(revision b7c508bb5178dd4d0b44194156680dfcb022f980)
+++ b/include/Button.c	(date 1670847128000)
@@ -1,7 +1,7 @@
 uint8_t Button[25]={
-0b11111111, 0b11110000, 0b00000000, 0b00000000,
-0b11111111, 0b00001000, 0b10101010, 0b10101010,
-0b11110000, 0b10011001, 0b10011010, 0b10101010,
-0b00001000, 0b10011001, 0b10011001, 0b10011001,
-0b00001000, 0b10001000, 0b10001000, 0b10001000
+    0b11111111, 0b11110000, 0b00000000, 0b00000000,
+    0b11111111, 0b00001000, 0b10101010, 0b10101010,
+    0b11110000, 0b10011001, 0b10011010, 0b10101010,
+    0b00001000, 0b10011001, 0b10011001, 0b10011001,
+    0b00001000, 0b10001000, 0b10001000, 0b10001000
 };
Index: cmake-build-uno/Testing/Temporary/LastTest.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Start testing: Dec 12 11:42 W. Europe Standard Time\r\n----------------------------------------------------------\r\nEnd testing: Dec 12 11:42 W. Europe Standard Time\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-uno/Testing/Temporary/LastTest.log b/cmake-build-uno/Testing/Temporary/LastTest.log
--- a/cmake-build-uno/Testing/Temporary/LastTest.log	(revision b7c508bb5178dd4d0b44194156680dfcb022f980)
+++ b/cmake-build-uno/Testing/Temporary/LastTest.log	(date 1671549440025)
@@ -1,3 +1,3 @@
-Start testing: Dec 12 11:42 W. Europe Standard Time
+Start testing: Dec 20 16:17 W. Europe Standard Time
 ----------------------------------------------------------
-End testing: Dec 12 11:42 W. Europe Standard Time
+End testing: Dec 20 16:17 W. Europe Standard Time
Index: cmake-build-uno/.ninja_log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ninja log v5\r\n1\t2102\t0\tCMakeFiles/Production\td99f53f2f0e126b2\r\n2\t368\t6921247401429215\tbuild.ninja\tdb9e8402c5a57b03\r\n1\t2928\t0\tCMakeFiles/Debug\teb42534a060928fd\r\n0\t6335\t0\tCMakeFiles/Production\t6c49129361be9946\r\n0\t6335\t0\tC:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production\t6c49129361be9946\r\n1\t3905\t0\tCMakeFiles/Production\t6c49129361be9946\r\n1\t3905\t0\tC:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production\t6c49129361be9946\r\n0\t6215\t0\tCMakeFiles/Production\t6c49129361be9946\r\n0\t6215\t0\tC:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production\t6c49129361be9946\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-uno/.ninja_log b/cmake-build-uno/.ninja_log
--- a/cmake-build-uno/.ninja_log	(revision b7c508bb5178dd4d0b44194156680dfcb022f980)
+++ b/cmake-build-uno/.ninja_log	(date 1670859658869)
@@ -8,3 +8,43 @@
 1	3905	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
 0	6215	0	CMakeFiles/Production	6c49129361be9946
 0	6215	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	2704	0	CMakeFiles/Production	6c49129361be9946
+0	2704	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	4002	0	CMakeFiles/Production	6c49129361be9946
+0	4002	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	3795	0	CMakeFiles/Production	6c49129361be9946
+0	3795	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	4104	0	CMakeFiles/Production	6c49129361be9946
+1	4104	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	3271	0	CMakeFiles/Production	6c49129361be9946
+0	3271	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	3221	0	CMakeFiles/Production	6c49129361be9946
+0	3221	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3619	0	CMakeFiles/Production	6c49129361be9946
+1	3619	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	3115	0	CMakeFiles/Production	6c49129361be9946
+0	3115	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3131	0	CMakeFiles/Production	6c49129361be9946
+1	3131	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3816	0	CMakeFiles/Production	6c49129361be9946
+1	3816	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	4067	0	CMakeFiles/Production	6c49129361be9946
+0	4067	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3256	0	CMakeFiles/Production	6c49129361be9946
+1	3256	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3537	0	CMakeFiles/Production	6c49129361be9946
+1	3537	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3875	0	CMakeFiles/Production	6c49129361be9946
+1	3875	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	4226	0	CMakeFiles/Production	6c49129361be9946
+0	4226	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	4321	0	CMakeFiles/Production	6c49129361be9946
+0	4321	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+0	3336	0	CMakeFiles/Production	6c49129361be9946
+0	3336	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	3186	0	CMakeFiles/Production	6c49129361be9946
+1	3186	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	4980	0	CMakeFiles/Production	6c49129361be9946
+1	4980	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
+1	4982	0	CMakeFiles/Production	6c49129361be9946
+1	4982	0	C:/Users/Frank Rietman/Documents/KBSMIC/cmake-build-uno/CMakeFiles/Production	6c49129361be9946
